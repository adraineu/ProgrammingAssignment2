makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
v <- makeVector(c(1, 2, 3, 4))
cachemean(v)
cachemean(v)
v <- makeVector(c(5, 2, 3, 4))
cachemean(v)
v2 <- makeVector(c(1, 2, 3, 4))
cachemean(v2)
source('~/DataScience/R Programming/ProgrammingAssignment2/cachematrix.R')
source('~/DataScience/R Programming/ProgrammingAssignment2/cachematrix.R')
source('~/DataScience/R Programming/ProgrammingAssignment2/cachematrix.R')
source('~/DataScience/R Programming/ProgrammingAssignment2/cachematrix.R')
m <- matrix(c(-1, -2, 1, 1), 2,2)
x <- makeCacheMatrix(m)
x$get()
inv <- cacheSolve(x)
inv
inv
inv <- cacheSolve(x)
m2 <- matrix(c(1, 2,3, 4), 2,2)
x$get()
x <- makeCacheMatrix(m2)
x$get()
inv <- cacheSolve(x)
inv
